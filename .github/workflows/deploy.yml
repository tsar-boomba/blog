name: Deploy to Github Pages

on:
    push:
        branches:
            - main

    workflow_dispatch:

jobs:
    pages-changes:
        runs-on: ubuntu-latest

        outputs:
            changed: ${{ contains(steps.changes.outputs.changes, 'not-api') && contains(steps.changes.outputs.changes, 'not-license') && contains(steps.changes.outputs.changes, 'not-readme') && contains(steps.changes.outputs.changes, 'not-vscode') }}
        steps:
            - uses: actions/checkout@v4
            - name: Changes
              id: changes
              uses: dorny/paths-filter@v2
              with:
                  base: 'main'
                  # if a filter is false, it means that the only change matched it, so do not deploy
                  filters: |
                      not-license: '!LICENSE*'
                      not-readme: '!**/README*'
                      not-vscode: '!.vscode/**'

    build-pages:
        runs-on: ubuntu-latest
        needs: pages-changes
        if: ${{ 'true' }}

        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v2.4.1
              with:
                  version: 9
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: '20'
                  cache: 'pnpm'
            - name: Build
              run: |
                  pnpm i --frozen-lockfile
                  pnpm build
            - name: Upload Artifact
              uses: actions/upload-pages-artifact@v1
              with:
                  path: dist/
                  retention-days: 2

    deploy-pages:
        runs-on: ubuntu-latest
        needs: [build-pages]
        if: ${{ !failure() && !cancelled() && needs.build-pages.result == 'success' }}
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source
        # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v1
