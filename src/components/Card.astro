---
import { handleStyleProps, StyleProps } from '@/utils/handleStyleProps';
import type { PrimaryShades } from '@/utils/types';
import type { HTMLTag, Polymorphic } from 'astro/types';

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	shade?: PrimaryShades;
} & StyleProps;

const { as: Tag = 'div', class: className, style: ogStyles, ...props } = Astro.props;
const shade = props.shade ?? 300;
const styles = {
	backgroundColor: props.shade ? `rgb(var(--primary-${shade}))` : '',
	boxShadow: props.shade
		? `0px 0px 96px 0px rgb(var(--primary-${shade < 1200 ? shade + 100 : shade}))`
		: '',
	...ogStyles,
	...handleStyleProps(props),
};
---

<style lang='scss'>
	.root {
		background-color: rgb(var(--primary-300));
		box-shadow: 0px 0px 96px 0px rgb(var(--primary-400));
		border-radius: var(--radius);
		box-shadow: 0px 0px 96px 0px rgb(var(--primary-400));
		color: var(--text-color);
	}
</style>
<Tag {...props} style={styles} class:list={['root', className]}>
	<slot />
</Tag>
